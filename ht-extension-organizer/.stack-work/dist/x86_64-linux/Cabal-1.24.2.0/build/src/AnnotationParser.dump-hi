
==================== FINAL INTERFACE ====================
2017-09-04 01:25:16.475375 UTC

interface ht-extension-organizer-0.1.0.0-1NgBbe619AH4JExLErEUCI:AnnotationParser [orphan module] 8002
  interface hash: af7c2229532faedecf1e58a0bcf1d1e0
  ABI hash: 997a9807aaa4027ae152123ee93e5201
  export-list hash: 18717b632913411375b4f69c3381f4b0
  orphan hash: ef7d9ac869f52fe33dd5c5c09871ba23
  flag hash: 6a2817b93d76e7c02cd9f8e810f912e1
  sig of: Nothing
  used TH splices: True
  where
exports:
  AnnotationParser.break'
  AnnotationParser.delimit
  AnnotationParser.delimit'
  AnnotationParser.getAnnot
  AnnotationParser.getExtensionAnnotations
  AnnotationParser.parseAnnot
  AnnotationParser.parseFile
  AnnotationParser.parseLine
module dependencies: ExtMonad Parser
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b
                      filepath-1.4.1.1@filepath-1.4.1.1 ghc-8.0.2
                      ghc-boot-8.0.2@ghc-boot-8.0.2 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-paths-0.1.0.9@ghc-paths-0.1.0.9-AhaDlGOsRAepox069XzG
                      ghc-prim-0.5.0.0 ghci-8.0.2@ghci-8.0.2
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6
                      haskell-tools-backend-ghc-0.8.1.0@haskell-tools-backend-ghc-0.8.1.0-DqHnbK8OPi6CBD5cIPITWq
                      haskell-tools-prettyprint-0.8.1.0@haskell-tools-prettyprint-0.8.1.0-F9iWkGq5ppnLH6whHm0DlC
                      haskell-tools-refactor-0.8.1.0@haskell-tools-refactor-0.8.1.0-AF8Q4cA8mAnLNwu5t0Icw8
                      haskell-tools-rewrite-0.8.1.0@haskell-tools-rewrite-0.8.1.0-85A6q9dMQgvKEKG9I8fxVU
                      hoopl-3.10.2.1@hoopl-3.10.2.1 hpc-0.6.0.3@hpc-0.6.0.3
                      instance-control-0.1.1.1@instance-control-0.1.1.1-1defRS82vAAEmZKRhe67aa
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3 process-1.4.3.0@process-1.4.3.0
                      references-0.3.2.2@references-0.3.2.2-y362bKYomIKNQKMTfOWVo
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      uniplate-1.6.12@uniplate-1.6.12-4PyZX21trQJ5lfk0CDvC7U
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         ghc-8.0.2:BlockId ghc-8.0.2:DsMonad ghc-8.0.2:LoadIface
         ghc-8.0.2:PPC.Ppr ghc-8.0.2:PprCmm ghc-8.0.2:PprCmmDecl
         ghc-8.0.2:PprCmmExpr ghc-8.0.2:PprCore ghc-8.0.2:SPARC.Ppr
         ghc-8.0.2:TcEnv ghc-8.0.2:TcRnMonad ghc-8.0.2:X86.Ppr
         ghc-boot-8.0.2@ghc-boot-8.0.2:GHC.LanguageExtensions
         ghci-8.0.2@ghci-8.0.2:GHCi.Message
         ghci-8.0.2@ghci-8.0.2:GHCi.TH.Binary
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.Data
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.Eq
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.Generic
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.SemanticTraversal
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.Show
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.SourceInfoTraversal
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.SemaInfoTypes
         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Utils.GHCInstances
         haskell-tools-backend-ghc-0.8.1.0@haskell-tools-backend-ghc-0.8.1.0-DqHnbK8OPi6CBD5cIPITWq:Language.Haskell.Tools.AST.FromGHC.Utils
         haskell-tools-prettyprint-0.8.1.0@haskell-tools-prettyprint-0.8.1.0-F9iWkGq5ppnLH6whHm0DlC:Language.Haskell.Tools.Transform.RangeTemplate
         haskell-tools-prettyprint-0.8.1.0@haskell-tools-prettyprint-0.8.1.0-F9iWkGq5ppnLH6whHm0DlC:Language.Haskell.Tools.Transform.SourceTemplate
         haskell-tools-prettyprint-0.8.1.0@haskell-tools-prettyprint-0.8.1.0-F9iWkGq5ppnLH6whHm0DlC:Language.Haskell.Tools.Transform.SourceTemplateHelpers
         haskell-tools-refactor-0.8.1.0@haskell-tools-refactor-0.8.1.0-AF8Q4cA8mAnLNwu5t0Icw8:Language.Haskell.Tools.Refactor.RefactorBase
         ht-extension-organizer-0.1.0.0-1NgBbe619AH4JExLErEUCI:ExtMonad
         references-0.3.2.2@references-0.3.2.2-y362bKYomIKNQKMTfOWVo:Control.Reference.Predefined.Containers.Tree
         references-0.3.2.2@references-0.3.2.2-y362bKYomIKNQKMTfOWVo:Control.Reference.TH.Records
         syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya:Data.Generics.Instances
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         uniplate-1.6.12@uniplate-1.6.12-4PyZX21trQJ5lfk0CDvC7U:Data.Generics.Uniplate.Data
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-8.0.2:PlaceHolder ghc-8.0.2:TrieMap
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         ghci-8.0.2@ghci-8.0.2:GHCi.FFI ghci-8.0.2@ghci-8.0.2:GHCi.Message
                         ghci-8.0.2@ghci-8.0.2:GHCi.ResolvedBCO
                         ghci-8.0.2@ghci-8.0.2:SizedSeq
                         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Ann
                         haskell-tools-ast-0.8.1.0@haskell-tools-ast-0.8.1.0-I9ZMaCkuuwT3FoQkwMjyW6:Language.Haskell.Tools.AST.Instances.Generic
                         haskell-tools-prettyprint-0.8.1.0@haskell-tools-prettyprint-0.8.1.0-F9iWkGq5ppnLH6whHm0DlC:Language.Haskell.Tools.Transform.RangeTemplate
                         haskell-tools-prettyprint-0.8.1.0@haskell-tools-prettyprint-0.8.1.0-F9iWkGq5ppnLH6whHm0DlC:Language.Haskell.Tools.Transform.SourceTemplate
                         hoopl-3.10.2.1@hoopl-3.10.2.1:Compiler.Hoopl.Block
                         hoopl-3.10.2.1@hoopl-3.10.2.1:Compiler.Hoopl.Dataflow
                         hoopl-3.10.2.1@hoopl-3.10.2.1:Compiler.Hoopl.Fuel
                         hoopl-3.10.2.1@hoopl-3.10.2.1:Compiler.Hoopl.Label
                         hoopl-3.10.2.1@hoopl-3.10.2.1:Compiler.Hoopl.Unique
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         references-0.3.2.2@references-0.3.2.2-y362bKYomIKNQKMTfOWVo:Control.Reference.Predefined.Containers
                         references-0.3.2.2@references-0.3.2.2-y362bKYomIKNQKMTfOWVo:Control.Reference.Predefined.Containers.Tree
                         references-0.3.2.2@references-0.3.2.2-y362bKYomIKNQKMTfOWVo:Control.Reference.Types
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type 92441ea50916fa3940e20fae60f255d7
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ExtMonad 6efef839e8084e4944c989299f7e8b99
  exports: 78fe3d4ca4f10930e37e7961f002463e
import  -/  Parser ea1bf9e93d29ad9d205d95d13f6c70be
  exports: a5b79593f901dbc9ed585aa0bcf797a0
Module target ht-extension-organizer-0.1.0.0-1NgBbe619AH4JExLErEUCI:AnnotationParser annotated by 1059 of type [Char]
3046437f14cbad3977713f2089421118
  $fReadExtension ::
    GHC.Read.Read GHC.LanguageExtensions.Type.Extension
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.LanguageExtensions.Type.Extension
                  AnnotationParser.$fReadExtension_$creadsPrec
                  AnnotationParser.$fReadExtension_$creadList
                  AnnotationParser.$fReadExtension_$creadPrec
                  AnnotationParser.$fReadExtension_$creadListPrec -}
271212498b42923f7ed866bcae3c7fa4
  $fReadExtension1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GHC.LanguageExtensions.Type.Extension]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GHC.LanguageExtensions.Type.Extension]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ GHC.LanguageExtensions.Type.Extension
                   AnnotationParser.$fReadExtension2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GHC.LanguageExtensions.Type.Extension>_R))
                   eta
                   @ b
                   eta1) -}
796966a41ce4f42742db75636b2d613f
  $fReadExtension10 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension407
                   AnnotationParser.$fReadExtension11) -}
1663faef03b3bef9ede5448d147e8d68
  $fReadExtension100 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension137
                   AnnotationParser.$fReadExtension101) -}
53cfda5995a138cd07300d5d0f141645
  $fReadExtension101 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension134
                   AnnotationParser.$fReadExtension102) -}
e28dbdc1490b5b5c441544eef9b78677
  $fReadExtension102 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension131
                   AnnotationParser.$fReadExtension103) -}
ea7cabad5f86cf169c63a67819b58462
  $fReadExtension103 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension128
                   AnnotationParser.$fReadExtension104) -}
8a9c66a39c5dda09d3cadc9ebbef1294
  $fReadExtension104 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension125
                   AnnotationParser.$fReadExtension105) -}
e0aa61fa6ce6b82cb087395a974a9995
  $fReadExtension105 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension122
                   AnnotationParser.$fReadExtension106) -}
87e1a95ff52e8fe6ef5c4d495ceb5443
  $fReadExtension106 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension119
                   AnnotationParser.$fReadExtension107) -}
02480412e7c86f844bbd06e1b69de1fd
  $fReadExtension107 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension116
                   AnnotationParser.$fReadExtension108) -}
6f1878316ae53273f3ca0ab8d5cf4304
  $fReadExtension108 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension113
                   AnnotationParser.$fReadExtension109) -}
2fd38784b643e97797efa97d99da43b4
  $fReadExtension109 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension110
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GHC.LanguageExtensions.Type.Extension))) -}
c05567828226a65fd3f31a12602f9f9e
  $fReadExtension11 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension404
                   AnnotationParser.$fReadExtension12) -}
62663bed4d0474db2713637733ceda0e
  $fReadExtension110 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension112,
                  AnnotationParser.$fReadExtension111
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c220a3502e355b44ae873bc75197c001
  $fReadExtension111 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MonadFailDesugaring) -}
f0eb6b1560430bbd44fc69b2dd064d70
  $fReadExtension112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MonadFailDesugaring"#) -}
56262720047e990e99add7bf5132e341
  $fReadExtension113 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension115,
                  AnnotationParser.$fReadExtension114
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
8e3a6d58e49a275116fef25ad0e73a7b
  $fReadExtension114 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.StrictData) -}
8d50e662a299b6329adde1c3f282a0be
  $fReadExtension115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StrictData"#) -}
c8f2409ec1e094aeb6737f888cc53491
  $fReadExtension116 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension118,
                  AnnotationParser.$fReadExtension117
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c1659aa1e80e8debf824ec09753c8507
  $fReadExtension117 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.Strict) -}
b8a5f5cb10a00d1a0da42dfc12570069
  $fReadExtension118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Strict"#) -}
8262622acb5b50e0dc2c657f08655a3e
  $fReadExtension119 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension121,
                  AnnotationParser.$fReadExtension120
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
ce00df035b1687144e777209ae5f4baa
  $fReadExtension12 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension401
                   AnnotationParser.$fReadExtension13) -}
f037be71d94b0cdecd74c5705766b3d8
  $fReadExtension120 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TypeApplications) -}
bf16d8139dc7533c90d9dcc79f93ee11
  $fReadExtension121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TypeApplications"#) -}
ebba04e5051204f28092c3c3ba06aee5
  $fReadExtension122 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension124,
                  AnnotationParser.$fReadExtension123
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
5deb202b9ce8278318b673bfdffe6a91
  $fReadExtension123 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.StaticPointers) -}
9622a6da6c2b8b59e45c9a19e6f7cb46
  $fReadExtension124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticPointers"#) -}
925987e2ce51b57c41c34dacb5c218a7
  $fReadExtension125 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension127,
                  AnnotationParser.$fReadExtension126
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
5119fde80ec14519d24adcaa9a4cb8b9
  $fReadExtension126 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.NamedWildCards) -}
d6e194fa0189cc30c31ede3f2d49a898
  $fReadExtension127 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NamedWildCards"#) -}
391df85e8630909a3ba7316441000bff
  $fReadExtension128 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension130,
                  AnnotationParser.$fReadExtension129
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
b5f3a608b889b0b9e51d15f49142fe1f
  $fReadExtension129 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.PartialTypeSignatures) -}
b2402a2842cd75cdd7ed7fc2de88167c
  $fReadExtension13 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension398
                   AnnotationParser.$fReadExtension14) -}
3f8581dd0fcaaf85c08c0e101089a8e3
  $fReadExtension130 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "PartialTypeSignatures"#) -}
1e37725c5a50d251fe464e3c6309f8f7
  $fReadExtension131 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension133,
                  AnnotationParser.$fReadExtension132
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
31fd840d8eb68afff12400189cce70c5
  $fReadExtension132 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.PatternSynonyms) -}
a4e41bf8bbdb5a03c2361444a3bdc80f
  $fReadExtension133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PatternSynonyms"#) -}
bed38982d61f2fa8794228620ba3ed1d
  $fReadExtension134 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension136,
                  AnnotationParser.$fReadExtension135
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
25edb6cf75bb01b035f3b5399c2aea60
  $fReadExtension135 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.EmptyCase) -}
f08f36a83cef53f46e4b2807407fe3c5
  $fReadExtension136 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EmptyCase"#) -}
9706ebb64609bfe11a67a4999291ba28
  $fReadExtension137 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension139,
                  AnnotationParser.$fReadExtension138
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
2cda791fec9bf744e93ac04aa1a3b26f
  $fReadExtension138 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.OverloadedLabels) -}
085276c6c60c1a5d2b14ac0048b22f8b
  $fReadExtension139 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OverloadedLabels"#) -}
3ff73e69cc20b0352e0a20850121df00
  $fReadExtension14 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension395
                   AnnotationParser.$fReadExtension15) -}
de6c35e57786862f0828f3bd56a7b865
  $fReadExtension140 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension142,
                  AnnotationParser.$fReadExtension141
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
f9081f8dda229ee51d80eb281d39f3fa
  $fReadExtension141 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DuplicateRecordFields) -}
71165ebe399a92cbacfb5bbd21f039b7
  $fReadExtension142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "DuplicateRecordFields"#) -}
684866603f641f29401f57ef22831aea
  $fReadExtension143 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension145,
                  AnnotationParser.$fReadExtension144
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
47547476e4cbd050b3c60b21ee66fe4a
  $fReadExtension144 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.NegativeLiterals) -}
133962eff6b73891b58153b30613079b
  $fReadExtension145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NegativeLiterals"#) -}
86d3599e8640cbe354c22d96778327f9
  $fReadExtension146 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension148,
                  AnnotationParser.$fReadExtension147
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
622bda9a379f21771745955d9b076b18
  $fReadExtension147 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.BinaryLiterals) -}
d2579d7900595b7ddc52ba58dc06096b
  $fReadExtension148 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BinaryLiterals"#) -}
f23ea2f854a6eeaeddcd406a483727b5
  $fReadExtension149 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension151,
                  AnnotationParser.$fReadExtension150
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
4bdb36f44706b2f12aba3f3dd5b9bbe9
  $fReadExtension15 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension392
                   AnnotationParser.$fReadExtension16) -}
581d2b0c32bc1f965dbb4b1d7d55e63c
  $fReadExtension150 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MultiWayIf) -}
f77e6d3e5d8b9841daebaa77d034f033
  $fReadExtension151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MultiWayIf"#) -}
c2c39dcbff4fb740d2d7ce0dae9752dc
  $fReadExtension152 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension154,
                  AnnotationParser.$fReadExtension153
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
451f2a4d923ba43da4f0b96bcbce3abe
  $fReadExtension153 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.LambdaCase) -}
8e6cb6d229d014978930463b65a39a30
  $fReadExtension154 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LambdaCase"#) -}
d9ff63bf0e70180b6153ebd62216a15b
  $fReadExtension155 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension157,
                  AnnotationParser.$fReadExtension156
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
0afd53b5ffdb5090235ec91a9c39add4
  $fReadExtension156 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TraditionalRecordSyntax) -}
57d3920a47dfdd7f108db7380001126d
  $fReadExtension157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "TraditionalRecordSyntax"#) -}
d69c134b5c617c5bf0d8d4440c62906e
  $fReadExtension158 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension160,
                  AnnotationParser.$fReadExtension159
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
452d6bb0e8b1fdc6bf21cbb994a7cd32
  $fReadExtension159 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RelaxedLayout) -}
3af65d49442e205922667240b2ec29e8
  $fReadExtension16 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension389
                   AnnotationParser.$fReadExtension17) -}
63968a66d2ce71552fa1edb512cc0b36
  $fReadExtension160 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RelaxedLayout"#) -}
b5f7b82dc1c722b28517f3f82e405c21
  $fReadExtension161 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension163,
                  AnnotationParser.$fReadExtension162
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
604f7ec07d8c6c535cbbdf5fa59d6665
  $fReadExtension162 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.NondecreasingIndentation) -}
82e03ce8b0621b03e32a5daf58646a41
  $fReadExtension163 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "NondecreasingIndentation"#) -}
a8f916cbe93967cd10155c237666606e
  $fReadExtension164 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension166,
                  AnnotationParser.$fReadExtension165
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
36a3d476a451f368394d5117f6f1971b
  $fReadExtension165 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DatatypeContexts) -}
9a0810a6bfbf8b62f9561f71642679a5
  $fReadExtension166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DatatypeContexts"#) -}
7af1b7d2b09db1015ee1b583cd12ffec
  $fReadExtension167 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension169,
                  AnnotationParser.$fReadExtension168
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
e808cd8c6f267b9aaaac5130faec6564
  $fReadExtension168 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   GHC.LanguageExtensions.Type.AlternativeLayoutRuleTransitional) -}
626bc7039d7252ea47f804499ca6f801
  $fReadExtension169 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "AlternativeLayoutRuleTransitional"#) -}
26f1899919bfaecfc47768fbe7575218
  $fReadExtension17 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension386
                   AnnotationParser.$fReadExtension18) -}
914fe9e49cff2a638827f3d3ab17d2db
  $fReadExtension170 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension172,
                  AnnotationParser.$fReadExtension171
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
052f018c2fb80a3c867fc853d8092fb5
  $fReadExtension171 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.AlternativeLayoutRule) -}
02ea16ec316b99edb824bd39805ea09c
  $fReadExtension172 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "AlternativeLayoutRule"#) -}
5069d421079f6cc2ec0ee1db9fcf5197
  $fReadExtension173 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension175,
                  AnnotationParser.$fReadExtension174
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
bb80b9b78ee4c8b462c5e07e080a8cb6
  $fReadExtension174 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ExplicitForAll) -}
ffe5261c8d2e00434d0f687ec5a77a3b
  $fReadExtension175 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ExplicitForAll"#) -}
68f93d17b196f10d319a8024f2089823
  $fReadExtension176 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension178,
                  AnnotationParser.$fReadExtension177
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
a75bd59b81ec0d337e9e1c38df038279
  $fReadExtension177 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.PackageImports) -}
243f1548b785ee5d3ecdb8156ec3c3d6
  $fReadExtension178 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PackageImports"#) -}
ea728506c24175a55bfbef4b5b9934f2
  $fReadExtension179 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension181,
                  AnnotationParser.$fReadExtension180
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
783bcb17ad0b98aca238629be030fc80
  $fReadExtension18 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension383
                   AnnotationParser.$fReadExtension19) -}
a55bf8c2fa1b95c46fc406fd59613c37
  $fReadExtension180 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ExplicitNamespaces) -}
ee96c4e3d58866ac713f5c3d1e250def
  $fReadExtension181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ExplicitNamespaces"#) -}
d600e8f8c88a8edabf3ed385a3d3db61
  $fReadExtension182 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension184,
                  AnnotationParser.$fReadExtension183
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
d52bb475ac0480530e69914b3670d7a4
  $fReadExtension183 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TypeOperators) -}
a337b2b13b07eff36cb9f09758d1d663
  $fReadExtension184 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TypeOperators"#) -}
1a90132822f0decba74128c5adcc433a
  $fReadExtension185 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension187,
                  AnnotationParser.$fReadExtension186
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
46ecabb7bc9ef0f9b38b1c5c3d1ff122
  $fReadExtension186 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ImpredicativeTypes) -}
e6f425593d203e4d356a16fa54d45a46
  $fReadExtension187 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ImpredicativeTypes"#) -}
db48fb5e264453fc10baea61065aff53
  $fReadExtension188 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension190,
                  AnnotationParser.$fReadExtension189
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
797819c9c5eac95f8c6beddb28e9f9b2
  $fReadExtension189 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RankNTypes) -}
07a9b9a7d98a11fe3eaa4c533e019d57
  $fReadExtension19 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension380
                   AnnotationParser.$fReadExtension20) -}
f3b22507aa157823019d709034d4b031
  $fReadExtension190 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RankNTypes"#) -}
c688c8b8202566e78159cca618021774
  $fReadExtension191 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension193,
                  AnnotationParser.$fReadExtension192
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c5649fd1010eccb6282e85511e6f9920
  $fReadExtension192 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.LiberalTypeSynonyms) -}
cd17dd2693e49775aa582aaacbfd7400
  $fReadExtension193 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "LiberalTypeSynonyms"#) -}
3daa063d5c69d2acd22d2a3ab7eced55
  $fReadExtension194 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension196,
                  AnnotationParser.$fReadExtension195
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
e66626fb539a2055117bdb911ed8df71
  $fReadExtension195 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.PatternGuards) -}
1ca05bde697070d13a69f63fecaf7d0a
  $fReadExtension196 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PatternGuards"#) -}
b835aa13ce68a0ed0ee49ef1470876d5
  $fReadExtension197 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension199,
                  AnnotationParser.$fReadExtension198
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
70c286ecda09ce38b5f965c91f97b68f
  $fReadExtension198 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TupleSections) -}
b286056c3ace80d06ad12481d29b6fe3
  $fReadExtension199 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TupleSections"#) -}
6f5fafc023bdb29fe2eb4669bd3f5882
  $fReadExtension2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         GHC.LanguageExtensions.Type.Extension
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ GHC.LanguageExtensions.Type.Extension
                   AnnotationParser.$fReadExtension3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GHC.LanguageExtensions.Type.Extension>_R))) -}
4ce77469f838ff88287247f8cb2962a1
  $fReadExtension20 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension377
                   AnnotationParser.$fReadExtension21) -}
7cdaae71b2c3dc5547754baca9a5605c
  $fReadExtension200 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension202,
                  AnnotationParser.$fReadExtension201
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
a6287506eed2256b9621fbeffd166582
  $fReadExtension201 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.PostfixOperators) -}
e776cbb0f043000d085c6a6b8723cc10
  $fReadExtension202 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PostfixOperators"#) -}
61e2e3a2f4afb57241aff79845f34112
  $fReadExtension203 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension205,
                  AnnotationParser.$fReadExtension204
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
14b7707ab10f8f336107761db5cf16eb
  $fReadExtension204 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RecursiveDo) -}
677871a5432fca50dca3b569e44073b3
  $fReadExtension205 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RecursiveDo"#) -}
7527f84cb9f614bad004d929632e8bc9
  $fReadExtension206 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension208,
                  AnnotationParser.$fReadExtension207
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
bceaff52e4b5e0d79f721d33c6071df7
  $fReadExtension207 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.GeneralizedNewtypeDeriving) -}
e5c3dfcb8c8e4225b77552fc586aabcf
  $fReadExtension208 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "GeneralizedNewtypeDeriving"#) -}
31d957906ab1dcfaf0bb3c77038140c4
  $fReadExtension209 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension211,
                  AnnotationParser.$fReadExtension210
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
5a73dd5ed44b4958ba17cbc68020a9be
  $fReadExtension21 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension374
                   AnnotationParser.$fReadExtension22) -}
b2b8742c861abc6b012afb3f0f9a2078
  $fReadExtension210 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MonadComprehensions) -}
eebec534caf5c7f85e21ecfea366b8b8
  $fReadExtension211 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MonadComprehensions"#) -}
08d71d286a89cad7b962aec31018b00e
  $fReadExtension212 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension214,
                  AnnotationParser.$fReadExtension213
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
7b58de1c8a9743b39bdd2fd3b4bad9d2
  $fReadExtension213 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TransformListComp) -}
d237f8b657bbdf6a23b608a6c49e62c6
  $fReadExtension214 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TransformListComp"#) -}
b29009bb50e4ce4659b20608c5c26213
  $fReadExtension215 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension217,
                  AnnotationParser.$fReadExtension216
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
29bf78f6c3bd3b86879faa7979a99d10
  $fReadExtension216 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ParallelListComp) -}
a12bcd0a03b2f297479638b3b18dc7d9
  $fReadExtension217 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ParallelListComp"#) -}
78a4ee3025c0a3173201c64ccbb2bf68
  $fReadExtension218 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension220,
                  AnnotationParser.$fReadExtension219
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
b0bb427e8dace36e38abab0cca8a0a82
  $fReadExtension219 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RoleAnnotations) -}
fab5167d3cec29f01712691136d9d948
  $fReadExtension22 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension371
                   AnnotationParser.$fReadExtension23) -}
4162d00d00718654bf76d17a92b77a0a
  $fReadExtension220 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RoleAnnotations"#) -}
8945c19bedc6bfcc9f2c15af0fd92f7e
  $fReadExtension221 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension223,
                  AnnotationParser.$fReadExtension222
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
af7a416fb07140f4507d9bf637bbd896
  $fReadExtension222 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.KindSignatures) -}
9fa979d02cae7911efba108fbdc9c207
  $fReadExtension223 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KindSignatures"#) -}
cbca1de171ee6bb63b0840043ceb311e
  $fReadExtension224 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension226,
                  AnnotationParser.$fReadExtension225
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
d65193e543d667af8bd0a8a9cf0168f3
  $fReadExtension225 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.EmptyDataDecls) -}
50bab26d0af6d7dfbae9fa13279f75c1
  $fReadExtension226 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EmptyDataDecls"#) -}
b6c048c202c8de53ee20810dc6d1728b
  $fReadExtension227 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension229,
                  AnnotationParser.$fReadExtension228
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
595baa48bd8f5e042e64515898df80ab
  $fReadExtension228 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MagicHash) -}
4abe35ea22aa6339d18f9e7e6bbeb144
  $fReadExtension229 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MagicHash"#) -}
46940a3a078db2f2128393b101b4a425
  $fReadExtension23 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension368
                   AnnotationParser.$fReadExtension24) -}
6871f9133a9e42edad401b7224673922
  $fReadExtension230 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension232,
                  AnnotationParser.$fReadExtension231
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
595da2b8dd2deeb4c289910139e7a1ab
  $fReadExtension231 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ExistentialQuantification) -}
055314af3f63a022193889a5ced42028
  $fReadExtension232 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ExistentialQuantification"#) -}
b86c60a8680766a4b5fcd7e0498cb9d4
  $fReadExtension233 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension235,
                  AnnotationParser.$fReadExtension234
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
7303e89423f610835869310b84cb383b
  $fReadExtension234 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.UnicodeSyntax) -}
cff6f61317b24c305cb40c09deec5abf
  $fReadExtension235 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UnicodeSyntax"#) -}
d8981480a92897766edf626ee0bdda30
  $fReadExtension236 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension238,
                  AnnotationParser.$fReadExtension237
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
776b73156b6a158c53c0120d3f70944b
  $fReadExtension237 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.FunctionalDependencies) -}
de4519db01bfa4967d052b42b31b9d71
  $fReadExtension238 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "FunctionalDependencies"#) -}
63eaaa5a053de77bc1693708c2b0aaa9
  $fReadExtension239 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension241,
                  AnnotationParser.$fReadExtension240
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
8a6db573e6e177e349aeae6b07921896
  $fReadExtension24 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension365
                   AnnotationParser.$fReadExtension25) -}
3b5bc83186db2afcb35cab7209333fd5
  $fReadExtension240 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.NullaryTypeClasses) -}
a954da1d128558c0ae96f1226d2aee27
  $fReadExtension241 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NullaryTypeClasses"#) -}
3a506b78d968d44ae32d6075f85c0c56
  $fReadExtension242 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension244,
                  AnnotationParser.$fReadExtension243
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
d7013bb9df9d45444acf8c401aa40765
  $fReadExtension243 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MultiParamTypeClasses) -}
b7153074027d93e42032097c1e27fdbf
  $fReadExtension244 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MultiParamTypeClasses"#) -}
223e3049e6c66171e090faef325bfb40
  $fReadExtension245 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension247,
                  AnnotationParser.$fReadExtension246
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
9e64ddb1a803cbe3f35c7cb7dc353036
  $fReadExtension246 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ConstrainedClassMethods) -}
198c384a5816d0d6bb47bda9a3424946
  $fReadExtension247 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ConstrainedClassMethods"#) -}
d7d99a4b35325e84082553e29978729b
  $fReadExtension248 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension250,
                  AnnotationParser.$fReadExtension249
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
fafd64b6ce07d9cbff3490064fcdb91e
  $fReadExtension249 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.FlexibleInstances) -}
13b952a3d63954161c5a3112cd4e42cf
  $fReadExtension25 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension362
                   AnnotationParser.$fReadExtension26) -}
dc85ec15f66f15d5e67337c278bc0902
  $fReadExtension250 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FlexibleInstances"#) -}
23bf88be3c877a5f8358b46a86fe61aa
  $fReadExtension251 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension253,
                  AnnotationParser.$fReadExtension252
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
805ce17f87642569bfa4acad059e696f
  $fReadExtension252 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.FlexibleContexts) -}
be49c4c22973460bcbc81583cb71ec80
  $fReadExtension253 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FlexibleContexts"#) -}
9ea94615cde17097b6911a34f5999ef6
  $fReadExtension254 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension256,
                  AnnotationParser.$fReadExtension255
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
ed7485081cc364a627bd8e4999f6384b
  $fReadExtension255 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TypeSynonymInstances) -}
4b24a8332d53f6cf6be71278243178c9
  $fReadExtension256 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "TypeSynonymInstances"#) -}
e73e8126e47090c05a520ebce5920cea
  $fReadExtension257 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension259,
                  AnnotationParser.$fReadExtension258
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c0c7c409f3b6985ad7da9a7126ce5be4
  $fReadExtension258 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveLift) -}
bbc3c9a9ec12c98a46e2351631df3366
  $fReadExtension259 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveLift"#) -}
c6efb2dc691dfdb3e17f2be3c9bc08e8
  $fReadExtension26 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension359
                   AnnotationParser.$fReadExtension27) -}
3049406e52fdcdc2eb6436754599f661
  $fReadExtension260 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension262,
                  AnnotationParser.$fReadExtension261
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
d2d209afb3593922bce8814e3cbe9276
  $fReadExtension261 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveAnyClass) -}
2212596fd9eddbef4bf07ad296079001
  $fReadExtension262 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveAnyClass"#) -}
58e87a3e8e98807907b97f1b9076a5a1
  $fReadExtension263 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension265,
                  AnnotationParser.$fReadExtension264
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
9214e659530ba35f9aed86d7b5849b22
  $fReadExtension264 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DefaultSignatures) -}
5a887f0aa66b334be5dcb098b23fd379
  $fReadExtension265 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DefaultSignatures"#) -}
e87de1a1c4723c474f97167a975e5f99
  $fReadExtension266 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension268,
                  AnnotationParser.$fReadExtension267
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
af6d21589c5f08f0eb4a09b26eb8ef39
  $fReadExtension267 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveGeneric) -}
79e0dd68c988794a1287c6357c07c994
  $fReadExtension268 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveGeneric"#) -}
67518a4f6a600218924654dbb381ea9a
  $fReadExtension269 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension271,
                  AnnotationParser.$fReadExtension270
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
1517e3a2d45e580cba26ee1aa353443b
  $fReadExtension27 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension356
                   AnnotationParser.$fReadExtension28) -}
b5501317c7de2da202119639e661f7b7
  $fReadExtension270 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveFoldable) -}
7449ad8f2690c3395f58b6eff6821dab
  $fReadExtension271 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveFoldable"#) -}
53ae8bca7aa1da337a6b40a61784309b
  $fReadExtension272 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension274,
                  AnnotationParser.$fReadExtension273
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
d2068451ed7f28d09d39f7e0f535533d
  $fReadExtension273 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveTraversable) -}
5d062fdbe5a6a486201da134c8e54c73
  $fReadExtension274 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveTraversable"#) -}
862995f18e4c40f0ab6c7bb984b23c1f
  $fReadExtension275 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension277,
                  AnnotationParser.$fReadExtension276
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c8863092e0e6e5a02eae876f5e3beade
  $fReadExtension276 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveFunctor) -}
c08d2d6ff8c3a5beb195b90c1b927ae8
  $fReadExtension277 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveFunctor"#) -}
4366a30f3e7d566257cb96f405e0fbca
  $fReadExtension278 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension280,
                  AnnotationParser.$fReadExtension279
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
062d5a8047ec55e871bfe00aaa6bf2d8
  $fReadExtension279 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.AutoDeriveTypeable) -}
80f2ae6946eb24dd9457f30e8b9745e5
  $fReadExtension28 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension353
                   AnnotationParser.$fReadExtension29) -}
0bf3b3c2ef6040be60a5fb88b33cc19e
  $fReadExtension280 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AutoDeriveTypeable"#) -}
e557678589c17ce5a3ee85bdb9fc5081
  $fReadExtension281 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension283,
                  AnnotationParser.$fReadExtension282
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
7d0be0d430c6c3decc27c22c2025fe47
  $fReadExtension282 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DeriveDataTypeable) -}
122fd7887645031088e7234135af79d5
  $fReadExtension283 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DeriveDataTypeable"#) -}
91efa5875bce0c447bd89694e855920f
  $fReadExtension284 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension286,
                  AnnotationParser.$fReadExtension285
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
268981853588a4b7a5527233b96fca50
  $fReadExtension285 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.StandaloneDeriving) -}
ae7ad3b89edd26c8fc7e538c2c079c74
  $fReadExtension286 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StandaloneDeriving"#) -}
58c4a46c97d1bf258d079b680acb8842
  $fReadExtension287 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension289,
                  AnnotationParser.$fReadExtension288
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
035711fbb1aa3a5189c148a2d466ecc5
  $fReadExtension288 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ApplicativeDo) -}
e8ffe6178ba3f2ee39345cfa593a72ee
  $fReadExtension289 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ApplicativeDo"#) -}
d6b2d080da3b77ec0b5d12052e3fcf25
  $fReadExtension29 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension350
                   AnnotationParser.$fReadExtension30) -}
0a9370976ddc5b3ec7d15dfd7d284b80
  $fReadExtension290 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension292,
                  AnnotationParser.$fReadExtension291
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
89aac381ff624be3b5194d34c8936997
  $fReadExtension291 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.InstanceSigs) -}
67e997d0f820e13388b32d03e8defcb4
  $fReadExtension292 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InstanceSigs"#) -}
702afd928848dc691a14408569d3052e
  $fReadExtension293 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension295,
                  AnnotationParser.$fReadExtension294
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
a8bc4c357a50c503397b4c5d3a765a07
  $fReadExtension294 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DataKinds) -}
d03efe668ce04e9421537264c35658b8
  $fReadExtension295 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DataKinds"#) -}
e2322085f3e4144da80233db2dc20ae5
  $fReadExtension296 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension298,
                  AnnotationParser.$fReadExtension297
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
07d30f2db69bc2186d2f11ba40becab2
  $fReadExtension297 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.PolyKinds) -}
edb0ce9577d67f48e57e49e61aca1b3c
  $fReadExtension298 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PolyKinds"#) -}
7d8d3f275c5573dd830dddc47682eab2
  $fReadExtension299 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension301,
                  AnnotationParser.$fReadExtension300
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
de0bea85a04179303e547407044db6a2
  $fReadExtension3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         GHC.LanguageExtensions.Type.Extension
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2
                   @ GHC.LanguageExtensions.Type.Extension
                   AnnotationParser.$fReadExtension4
                   eta) -}
6425bb410e3ba94390a5f9ac4dab3f78
  $fReadExtension30 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension347
                   AnnotationParser.$fReadExtension31) -}
78ab0d2a1a2ac0ccbd4071131b0b543f
  $fReadExtension300 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ConstraintKinds) -}
61345d059a362e51dc7f15f1743aab62
  $fReadExtension301 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ConstraintKinds"#) -}
5c91d49ebc109f126260f8e0b8715c70
  $fReadExtension302 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension304,
                  AnnotationParser.$fReadExtension303
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
57c07df4b1eff2d28ba301034b09776c
  $fReadExtension303 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RebindableSyntax) -}
82371cd7225c89df08783257e8632c6d
  $fReadExtension304 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RebindableSyntax"#) -}
7b66971d8472f954457a4f2bd5b1bffa
  $fReadExtension305 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension307,
                  AnnotationParser.$fReadExtension306
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
90c09758523c4021180ff2fcc6d2b94a
  $fReadExtension306 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DoAndIfThenElse) -}
ea38458a35375a0bb4ec70ffc6337ae1
  $fReadExtension307 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DoAndIfThenElse"#) -}
b085d4cda16ead4ad7a6c4ed4877a23b
  $fReadExtension308 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension310,
                  AnnotationParser.$fReadExtension309
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
0c207cbd5335a544acfdb500f59c8461
  $fReadExtension309 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.NPlusKPatterns) -}
28f87d8e929d74797e6dbdfd404d59d1
  $fReadExtension31 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension344
                   AnnotationParser.$fReadExtension32) -}
1b6e366ca715081ecb204cb41c8e639c
  $fReadExtension310 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NPlusKPatterns"#) -}
b9a02c73ce44e5ed76bb71d14519d81a
  $fReadExtension311 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension313,
                  AnnotationParser.$fReadExtension312
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
a7334ed7f9b00985935896f55190d9b2
  $fReadExtension312 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.GADTSyntax) -}
dab85c990b0509c84aba673558755cfb
  $fReadExtension313 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GADTSyntax"#) -}
5501f0e76eb2c6b99e3ddc8c8902829e
  $fReadExtension314 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension316,
                  AnnotationParser.$fReadExtension315
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
bb7294d003bb537d8309afbd764fde1a
  $fReadExtension315 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.GADTs) -}
bdbd7e5b816b35bf0b7706a7128ccf9c
  $fReadExtension316 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GADTs"#) -}
fd1e5b3b9fd3092e080526a54f1a37d6
  $fReadExtension317 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension319,
                  AnnotationParser.$fReadExtension318
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
65a3a92fb46c381dc51075f123434443
  $fReadExtension318 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ViewPatterns) -}
7ebdf3aa5261c4bf34edee35c15d97a0
  $fReadExtension319 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ViewPatterns"#) -}
91313b83d0b3a87415e169bf24e8b0c1
  $fReadExtension32 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension341
                   AnnotationParser.$fReadExtension33) -}
23f417014e4025f548cea763b90680b6
  $fReadExtension320 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension322,
                  AnnotationParser.$fReadExtension321
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
b137a0548dfa3f034fe66301235f7b94
  $fReadExtension321 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RecordPuns) -}
cc44d782e4ee402b360095582a106e00
  $fReadExtension322 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RecordPuns"#) -}
0484bdba727e0ad48bc26a3a840e2d9c
  $fReadExtension323 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension325,
                  AnnotationParser.$fReadExtension324
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
7947ef716315fb3beebaa1440a6b90c9
  $fReadExtension324 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RecordWildCards) -}
bb9063b4f7c6a0c8848cb9a52e3559d9
  $fReadExtension325 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RecordWildCards"#) -}
da54383bc5a06534d4cadfe0be8374e1
  $fReadExtension326 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension328,
                  AnnotationParser.$fReadExtension327
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
505afaa064a8c4e7c314c3b3752f089b
  $fReadExtension327 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.DisambiguateRecordFields) -}
3e14c728b87f66b08cf248fc1bf5c635
  $fReadExtension328 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "DisambiguateRecordFields"#) -}
2ba69a84734492cca0998a834606c5ed
  $fReadExtension329 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension331,
                  AnnotationParser.$fReadExtension330
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
48d02b82bd4f40256b0e7aa77c83bc78
  $fReadExtension33 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension338
                   AnnotationParser.$fReadExtension34) -}
5797ce4f751012f453dd5ac20d1c0677
  $fReadExtension330 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.NumDecimals) -}
9b296dbf6e8b4139482acc8eb5916d2b
  $fReadExtension331 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NumDecimals"#) -}
6daf33b16a71ccf5dea58fc8a4a97b77
  $fReadExtension332 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension334,
                  AnnotationParser.$fReadExtension333
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
fae9b4cbdc253467706118d62d5d8204
  $fReadExtension333 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.OverloadedLists) -}
8f6ca6122c8de2dab3c47806d32b18c1
  $fReadExtension334 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OverloadedLists"#) -}
c29fed26fd0bb6eb1f68f3fdae7d5a05
  $fReadExtension335 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension337,
                  AnnotationParser.$fReadExtension336
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
ee38ddac0d7387ea38289b51ccef1409
  $fReadExtension336 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.OverloadedStrings) -}
660b8e09d1cf22d81b772f723ead3f59
  $fReadExtension337 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OverloadedStrings"#) -}
6850463c1b1a1fa32bafa6217b2d6cec
  $fReadExtension338 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension340,
                  AnnotationParser.$fReadExtension339
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
39059854cd32e602fe585631030f76c2
  $fReadExtension339 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TypeInType) -}
ef10f29d18358b739393ec1bff9b8673
  $fReadExtension34 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension335
                   AnnotationParser.$fReadExtension35) -}
253b26bdc182baa042b47c37f7a549e0
  $fReadExtension340 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TypeInType"#) -}
6097ef59248afb4b048bd91667f4477a
  $fReadExtension341 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension343,
                  AnnotationParser.$fReadExtension342
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
2180966faedf0a1d8893b424240763ae
  $fReadExtension342 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TypeFamilyDependencies) -}
d8e312c04df3635d9af6b20669a0a1f3
  $fReadExtension343 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "TypeFamilyDependencies"#) -}
a611f516025bc4a9316699a9f69f7d8d
  $fReadExtension344 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension346,
                  AnnotationParser.$fReadExtension345
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
443ddac16e3de2a6905888c888c37b27
  $fReadExtension345 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TypeFamilies) -}
5babff1dfd93bf97de86c45449354be1
  $fReadExtension346 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TypeFamilies"#) -}
e66bbd041eebd826cb1fe4e60bb2e0d8
  $fReadExtension347 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension349,
                  AnnotationParser.$fReadExtension348
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
3e3d3fe7239a09d21f4446850b146e02
  $fReadExtension348 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.BangPatterns) -}
b1b5888ec71744471154661c64b585a7
  $fReadExtension349 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BangPatterns"#) -}
0c47da0cb461f689e2d2de37894baeef
  $fReadExtension35 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension332
                   AnnotationParser.$fReadExtension36) -}
57ccf4ec7e63f826724f4be41c99b2d2
  $fReadExtension350 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension352,
                  AnnotationParser.$fReadExtension351
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
d3d349be909d9ada839e4074ec28d7af
  $fReadExtension351 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.UnboxedTuples) -}
f4e21c7118ae7af87314f0bcca5f6339
  $fReadExtension352 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UnboxedTuples"#) -}
efe5d3756080f35b3819282d2032d4f4
  $fReadExtension353 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension355,
                  AnnotationParser.$fReadExtension354
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
f028fa3d4c79d534f3b9350583c38634
  $fReadExtension354 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.AllowAmbiguousTypes) -}
8e0c417cd0e9875e39513c3e1eaba17f
  $fReadExtension355 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "AllowAmbiguousTypes"#) -}
e33009a5a703327da2633095408ee887
  $fReadExtension356 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension358,
                  AnnotationParser.$fReadExtension357
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
e34013620aad817275af2163f14aba35
  $fReadExtension357 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ScopedTypeVariables) -}
ae30cf40b3c00ad09af4504e82071b4c
  $fReadExtension358 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ScopedTypeVariables"#) -}
1c6dcec5dd10f0cc868711097d2b5903
  $fReadExtension359 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension361,
                  AnnotationParser.$fReadExtension360
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
b10fdcf476f694baf2d62adafc468405
  $fReadExtension36 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension329
                   AnnotationParser.$fReadExtension37) -}
095c25719ce39b30137261394fb76b52
  $fReadExtension360 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ImplicitPrelude) -}
82d5b33323b6f4c622594a8ba4547ab7
  $fReadExtension361 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ImplicitPrelude"#) -}
d445487d8ce57bebcdf6b9216ae7e194
  $fReadExtension362 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension364,
                  AnnotationParser.$fReadExtension363
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
f9cc087251b4858d954eb2b799583ef6
  $fReadExtension363 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ImplicitParams) -}
c6c67e809639ea52551a0075358f1931
  $fReadExtension364 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ImplicitParams"#) -}
014b4a0be6aab94b7ed9205e019d4bae
  $fReadExtension365 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension367,
                  AnnotationParser.$fReadExtension366
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
5187d7a15d02f0b9effdbaa7597e322a
  $fReadExtension366 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.QuasiQuotes) -}
c6fbb33561c0212eb7464e57f89ed6d9
  $fReadExtension367 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "QuasiQuotes"#) -}
7f3dec407de831dd984ca78b45b920ef
  $fReadExtension368 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension370,
                  AnnotationParser.$fReadExtension369
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
14f593e82bf1cc7ff715b664a56ab932
  $fReadExtension369 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TemplateHaskellQuotes) -}
b2ab0c0250cb93091818cd3e40af81a3
  $fReadExtension37 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension326
                   AnnotationParser.$fReadExtension38) -}
6e8a96f08c7ccfa498d1ec7e86885faf
  $fReadExtension370 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "TemplateHaskellQuotes"#) -}
d0fa386e5325454be90c7a3c03d97f46
  $fReadExtension371 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension373,
                  AnnotationParser.$fReadExtension372
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
6ef8bb19a0de02f6f89063ce0adb87df
  $fReadExtension372 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.TemplateHaskell) -}
f5234d4d7fc254c5cbc36833bd660fba
  $fReadExtension373 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TemplateHaskell"#) -}
932d992e5dec160c704c1c502ee5ebd4
  $fReadExtension374 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension376,
                  AnnotationParser.$fReadExtension375
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
1d89e2d38ab30ff6055d02c5d2da6b2f
  $fReadExtension375 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.Arrows) -}
eb4426fabfb8d5be5c0935185eebc98e
  $fReadExtension376 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Arrows"#) -}
1dbe268cd5281dd9a686cf61adfd0db7
  $fReadExtension377 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension379,
                  AnnotationParser.$fReadExtension378
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
8df7f4a5712d76dfc7830fa0e1ceb861
  $fReadExtension378 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ParallelArrays) -}
00e23286fecfdfd8c2825777f1d3b9fb
  $fReadExtension379 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ParallelArrays"#) -}
8cb62672cc667004ca5b35cf33700686
  $fReadExtension38 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension323
                   AnnotationParser.$fReadExtension39) -}
71f89ebabfe98af029ba85d288afc766
  $fReadExtension380 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension382,
                  AnnotationParser.$fReadExtension381
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
21031358792ff6953fc065768cefcf66
  $fReadExtension381 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.JavaScriptFFI) -}
1cbe7e77ed1053fd0b62e3c2861627a3
  $fReadExtension382 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "JavaScriptFFI"#) -}
1d248e582932307db3ff490e338928e0
  $fReadExtension383 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension385,
                  AnnotationParser.$fReadExtension384
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
4fe3f6b3031ef661743ad446431465cc
  $fReadExtension384 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.GHCForeignImportPrim) -}
6c9b997d236c0278bd88015f15562daa
  $fReadExtension385 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "GHCForeignImportPrim"#) -}
c7150e3bb23e5f54a125f4ab3ba0ceba
  $fReadExtension386 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension388,
                  AnnotationParser.$fReadExtension387
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
6c9c130c01d0190ed35dbec0ed5aa073
  $fReadExtension387 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.CApiFFI) -}
173ec9fce74856aa2247592397ffd60e
  $fReadExtension388 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CApiFFI"#) -}
bc44beb47c510e2d7a76e8c23a0572eb
  $fReadExtension389 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension391,
                  AnnotationParser.$fReadExtension390
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
e5654af2452df81c765a536415498197
  $fReadExtension39 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension320
                   AnnotationParser.$fReadExtension40) -}
b7f0c806d1c6f62998572a7f4eee8511
  $fReadExtension390 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.InterruptibleFFI) -}
e2e0037cf7896bc34253933866a78e40
  $fReadExtension391 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InterruptibleFFI"#) -}
bddf1e12780fb04986f85c9bd9e68429
  $fReadExtension392 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension394,
                  AnnotationParser.$fReadExtension393
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c78f926672a4028f1555b8aafda4fdd2
  $fReadExtension393 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.UnliftedFFITypes) -}
b5f03ea890d62668e1a2c9c815f54557
  $fReadExtension394 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UnliftedFFITypes"#) -}
0185c5d96aa4f428a6cffbd7e39ce2d5
  $fReadExtension395 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension397,
                  AnnotationParser.$fReadExtension396
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
cdd7e40baea2fd995da0cdf616a41e23
  $fReadExtension396 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ForeignFunctionInterface) -}
0f777868edab524bea8eb9cd3678ae2c
  $fReadExtension397 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ForeignFunctionInterface"#) -}
bd4f497098aa42bdfc11a3c1f41e54ed
  $fReadExtension398 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension400,
                  AnnotationParser.$fReadExtension399
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
2b0f50308cac990297550b9a11be959d
  $fReadExtension399 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.ExtendedDefaultRules) -}
6dacf86bb957ce0e1097d002fd7b872d
  $fReadExtension4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension425
                   AnnotationParser.$fReadExtension5) -}
6b2b9c7fc2c25ea76e3096694228839d
  $fReadExtension40 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension317
                   AnnotationParser.$fReadExtension41) -}
3994d1f101c7400457606386faa056c5
  $fReadExtension400 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ExtendedDefaultRules"#) -}
68313dd2d2f1a21105495f838a38c137
  $fReadExtension401 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension403,
                  AnnotationParser.$fReadExtension402
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
4e9c5273a77431592d8bee2dd2a472cd
  $fReadExtension402 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.RelaxedPolyRec) -}
657f223a98d73421bf1cf96ed1d6ec34
  $fReadExtension403 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RelaxedPolyRec"#) -}
f682a875ebfbefb864182c004a00ad6b
  $fReadExtension404 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension406,
                  AnnotationParser.$fReadExtension405
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
db484505b95e20e04d199d41d0e9ef22
  $fReadExtension405 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MonoLocalBinds) -}
f16262357ee356ed94abf5663fe8a082
  $fReadExtension406 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MonoLocalBinds"#) -}
352480d95e788465a1cbdccf19af4602
  $fReadExtension407 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension409,
                  AnnotationParser.$fReadExtension408
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
f5f7be93fd04cbb16d467c701a02fa32
  $fReadExtension408 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MonoPatBinds) -}
4b0f1781f95d392b887f705dae72fc79
  $fReadExtension409 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MonoPatBinds"#) -}
e2034a8819e23dc9e2943854056f3737
  $fReadExtension41 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension314
                   AnnotationParser.$fReadExtension42) -}
8c9228fbb15c03bff361f293342e6a71
  $fReadExtension410 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension412,
                  AnnotationParser.$fReadExtension411
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
698b29eab11c5d33dacf40ac3ea82de8
  $fReadExtension411 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.MonomorphismRestriction) -}
b9b0dff72ca25b2563b74b4e71047644
  $fReadExtension412 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MonomorphismRestriction"#) -}
8693488a5e5280918ae7dda59b80bce1
  $fReadExtension413 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension415,
                  AnnotationParser.$fReadExtension414
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c9d269c1b2c8a5fa7058fab09fee9a4c
  $fReadExtension414 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.UndecidableSuperClasses) -}
33b9cfd1ed5e5788d3fae068adbb0d6b
  $fReadExtension415 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "UndecidableSuperClasses"#) -}
74c18ded39b6485fca28601a80957246
  $fReadExtension416 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension418,
                  AnnotationParser.$fReadExtension417
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
c60ac1cefb581e5931b8507222448805
  $fReadExtension417 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.IncoherentInstances) -}
09f085c109da66e1528fd4c3c44e2cc8
  $fReadExtension418 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "IncoherentInstances"#) -}
358625b3da4a0492ee4d4fdd1b7aab21
  $fReadExtension419 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension421,
                  AnnotationParser.$fReadExtension420
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
315bbbb9af155fc1a1030a2fd1fcd076
  $fReadExtension42 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension311
                   AnnotationParser.$fReadExtension43) -}
ba5879059d4407c6743935dcbf7ed6a0
  $fReadExtension420 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.UndecidableInstances) -}
3faff4e2ab544c5247a1b7e47c26c4bc
  $fReadExtension421 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "UndecidableInstances"#) -}
cfbd54c97f1327bed7044909003cb7e4
  $fReadExtension422 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension424,
                  AnnotationParser.$fReadExtension423
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
f5bea918e363448c6a069dcf8ebbca69
  $fReadExtension423 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.OverlappingInstances) -}
10e4bdec28be4b3a2f982c7fced67f73
  $fReadExtension424 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "OverlappingInstances"#) -}
f47384488564d816eeddaf5f1721e61b
  $fReadExtension425 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GHC.LanguageExtensions.Type.Extension)
  {- Strictness: m,
     Unfolding: ((AnnotationParser.$fReadExtension427,
                  AnnotationParser.$fReadExtension426
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GHC.LanguageExtensions.Type.Extension>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))))) -}
372090ea9230683d7f7a677c21e64bd0
  $fReadExtension426 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GHC.LanguageExtensions.Type.Extension
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GHC.LanguageExtensions.Type.Extension
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GHC.LanguageExtensions.Type.Cpp) -}
459df6ea778043bf99bcf5df304a2fcb
  $fReadExtension427 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cpp"#) -}
89fac6d4971b23c3ec49fab2da59d99c
  $fReadExtension428 ::
    Text.ParserCombinators.ReadP.P
      [GHC.LanguageExtensions.Type.Extension]
  {- Unfolding: (GHC.Read.list1
                   @ GHC.LanguageExtensions.Type.Extension
                   AnnotationParser.$fReadExtension2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GHC.LanguageExtensions.Type.Extension>_R))
                   GHC.Read.$fRead()5
                   @ [GHC.LanguageExtensions.Type.Extension]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GHC.LanguageExtensions.Type.Extension])) -}
8535fa30278c7389c0f5dc2424d78973
  $fReadExtension43 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension308
                   AnnotationParser.$fReadExtension44) -}
2d1be8d116c64943c928b29a4de74cdd
  $fReadExtension44 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension305
                   AnnotationParser.$fReadExtension45) -}
24b679ec5eadb94391ae46b961fa1898
  $fReadExtension45 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension302
                   AnnotationParser.$fReadExtension46) -}
42bb600c62e55af13741dc63ddb09dec
  $fReadExtension46 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension299
                   AnnotationParser.$fReadExtension47) -}
943a077074c2d0e61a9f13f63f518d67
  $fReadExtension47 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension296
                   AnnotationParser.$fReadExtension48) -}
f80bac2e2f04ea9f060737d2995e6cc0
  $fReadExtension48 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension293
                   AnnotationParser.$fReadExtension49) -}
ecb82d2a5c349a5e49b484dfbe36f347
  $fReadExtension49 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension290
                   AnnotationParser.$fReadExtension50) -}
7dde5b454ca0cf0e2f367aafc6dd8aa3
  $fReadExtension5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension422
                   AnnotationParser.$fReadExtension6) -}
1ed07c58b8b474399b3127bea69fffd4
  $fReadExtension50 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension287
                   AnnotationParser.$fReadExtension51) -}
a747ba551eb276f9fdd11cfadfb65926
  $fReadExtension51 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension284
                   AnnotationParser.$fReadExtension52) -}
50e9182c3a63c6e3f19059716da6f63f
  $fReadExtension52 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension281
                   AnnotationParser.$fReadExtension53) -}
5c792fc92df01b20c8c0d712623e154b
  $fReadExtension53 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension278
                   AnnotationParser.$fReadExtension54) -}
3fc279eefd58f89f9193142adfcf8fc1
  $fReadExtension54 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension275
                   AnnotationParser.$fReadExtension55) -}
e3ad7d431e8810f433be9814cda90003
  $fReadExtension55 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension272
                   AnnotationParser.$fReadExtension56) -}
7ab0f6fd012956a024c79a42fd42ca34
  $fReadExtension56 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension269
                   AnnotationParser.$fReadExtension57) -}
ce3d5c6c5146b4d0b3a0f7e2c6fc492a
  $fReadExtension57 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension266
                   AnnotationParser.$fReadExtension58) -}
58cb0ea77b63e030b1ae627c1c335034
  $fReadExtension58 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension263
                   AnnotationParser.$fReadExtension59) -}
8133f8099ef7a87f3913367a9ffb5d6e
  $fReadExtension59 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension260
                   AnnotationParser.$fReadExtension60) -}
ae6d3cfc3bd50b27462afaf11e9c607e
  $fReadExtension6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension419
                   AnnotationParser.$fReadExtension7) -}
f8623b656406fc61fcb8f8512b2576fa
  $fReadExtension60 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension257
                   AnnotationParser.$fReadExtension61) -}
4e68190a9670ef8df4b6826d3ce32072
  $fReadExtension61 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension254
                   AnnotationParser.$fReadExtension62) -}
d3a6aaa8973d39847130d49c0e337645
  $fReadExtension62 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension251
                   AnnotationParser.$fReadExtension63) -}
ba83c7e48cc8c1f5e3e9146d0a63425a
  $fReadExtension63 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension248
                   AnnotationParser.$fReadExtension64) -}
a20415cd6cd8ba2f91a679eee5c584c7
  $fReadExtension64 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension245
                   AnnotationParser.$fReadExtension65) -}
84dd3dcdf5bd2104347383061c94d504
  $fReadExtension65 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension242
                   AnnotationParser.$fReadExtension66) -}
32786e194d67caca5d4d602b4fbcb7fb
  $fReadExtension66 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension239
                   AnnotationParser.$fReadExtension67) -}
7ee237e034de8de269d2f0c47efe442e
  $fReadExtension67 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension236
                   AnnotationParser.$fReadExtension68) -}
07456762110df10528c05549c48471b4
  $fReadExtension68 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension233
                   AnnotationParser.$fReadExtension69) -}
649f787050d01285d2b3371f5155e9f0
  $fReadExtension69 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension230
                   AnnotationParser.$fReadExtension70) -}
0207e93f835b2636244a29cde840335e
  $fReadExtension7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension416
                   AnnotationParser.$fReadExtension8) -}
efada399f36d7a63946c047f629e620f
  $fReadExtension70 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension227
                   AnnotationParser.$fReadExtension71) -}
df1d9780be4787b83ba1f19376dc60ef
  $fReadExtension71 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension224
                   AnnotationParser.$fReadExtension72) -}
aa5d30579327b73ca5020770bc234109
  $fReadExtension72 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension221
                   AnnotationParser.$fReadExtension73) -}
b13f11929911b3fd97152ca0c51b4a14
  $fReadExtension73 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension218
                   AnnotationParser.$fReadExtension74) -}
a992eb094e1b0eccb56747edc35ad9eb
  $fReadExtension74 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension215
                   AnnotationParser.$fReadExtension75) -}
fbf7a7b88517ee2910470ecbd9ce4057
  $fReadExtension75 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension212
                   AnnotationParser.$fReadExtension76) -}
01bfd2df7471df7d188dfc3919076aed
  $fReadExtension76 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension209
                   AnnotationParser.$fReadExtension77) -}
15e88fc90154dd8e4a7c8c41f9aa3f47
  $fReadExtension77 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension206
                   AnnotationParser.$fReadExtension78) -}
83c48c529312e1f8af27675067b132aa
  $fReadExtension78 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension203
                   AnnotationParser.$fReadExtension79) -}
64a3a32ea4b38d0cae1e371dbd46f4cf
  $fReadExtension79 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension200
                   AnnotationParser.$fReadExtension80) -}
3f10e6e7b723719e16e638b031507416
  $fReadExtension8 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension413
                   AnnotationParser.$fReadExtension9) -}
fe684c0f48398ccb7a0988ec06d35819
  $fReadExtension80 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension197
                   AnnotationParser.$fReadExtension81) -}
199d0589f9726bfb7664f5cbb8c1ae0d
  $fReadExtension81 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension194
                   AnnotationParser.$fReadExtension82) -}
7a452bada0a1ebcbd7f0d18e2f2aaf39
  $fReadExtension82 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension191
                   AnnotationParser.$fReadExtension83) -}
55324d03a6d498f8e5252c79b37f9ac0
  $fReadExtension83 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension188
                   AnnotationParser.$fReadExtension84) -}
05946e1ba3b67fc5d7bc4dd4811b8bcc
  $fReadExtension84 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension185
                   AnnotationParser.$fReadExtension85) -}
7c4e661f79cfd1d64d293d226a39c1e4
  $fReadExtension85 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension182
                   AnnotationParser.$fReadExtension86) -}
028e7c25a98409f101560d86426fd8ea
  $fReadExtension86 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension179
                   AnnotationParser.$fReadExtension87) -}
27f20e24879d28c933571928f3d6f8f1
  $fReadExtension87 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension176
                   AnnotationParser.$fReadExtension88) -}
be8232be84d42f5613d4bee4ce4b1c14
  $fReadExtension88 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension173
                   AnnotationParser.$fReadExtension89) -}
a4f6aac668ad5ca0f2d7baf1e572f92f
  $fReadExtension89 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension170
                   AnnotationParser.$fReadExtension90) -}
b6388409880b0cb6ba54f93af1060b9d
  $fReadExtension9 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension410
                   AnnotationParser.$fReadExtension10) -}
7033d369f955095cf67042dc41cc4571
  $fReadExtension90 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension167
                   AnnotationParser.$fReadExtension91) -}
2b5922bcc3d2a6e1eb138c0b381145e9
  $fReadExtension91 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension164
                   AnnotationParser.$fReadExtension92) -}
d97b07c796c6bb3b44b46666f6cf5dd0
  $fReadExtension92 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension161
                   AnnotationParser.$fReadExtension93) -}
c57f5688d6978649ebf6f3dc3b3638e9
  $fReadExtension93 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension158
                   AnnotationParser.$fReadExtension94) -}
8d45a2cc7bd8f973495bf6eede9346dc
  $fReadExtension94 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension155
                   AnnotationParser.$fReadExtension95) -}
bb0394ad37c528b754983a17499a88fa
  $fReadExtension95 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension152
                   AnnotationParser.$fReadExtension96) -}
44f77d33e1cca8458d2b3a31ac870997
  $fReadExtension96 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension149
                   AnnotationParser.$fReadExtension97) -}
f235d5bd95db70844b12ae793ac4f701
  $fReadExtension97 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension146
                   AnnotationParser.$fReadExtension98) -}
983b1f0666b435df5fa1896f74846cf4
  $fReadExtension98 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension143
                   AnnotationParser.$fReadExtension99) -}
87a0948106f28498393a8d8fd69ec83a
  $fReadExtension99 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GHC.LanguageExtensions.Type.Extension)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GHC.LanguageExtensions.Type.Extension)
                   AnnotationParser.$fReadExtension140
                   AnnotationParser.$fReadExtension100) -}
f616a841458b5c9ff845b1667d09931d
  $fReadExtension_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [GHC.LanguageExtensions.Type.Extension]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GHC.LanguageExtensions.Type.Extension]
                   AnnotationParser.$fReadExtension428) -}
92b283a856b418928528188f0dd68d37
  $fReadExtension_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [GHC.LanguageExtensions.Type.Extension]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                AnnotationParser.$fReadExtension1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GHC.LanguageExtensions.Type.Extension]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GHC.LanguageExtensions.Type.Extension]>_R))) -}
e5278df279d0a4571c5d00f3b75ec9b0
  $fReadExtension_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      GHC.LanguageExtensions.Type.Extension
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                AnnotationParser.$fReadExtension2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GHC.LanguageExtensions.Type.Extension>_R)) -}
ed66f057794445b2b5c9c144d48656a9
  $fReadExtension_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         GHC.LanguageExtensions.Type.Extension
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GHC.LanguageExtensions.Type.Extension
                   ((GHC.Read.parens1
                       @ GHC.LanguageExtensions.Type.Extension
                       AnnotationParser.$fReadExtension3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GHC.LanguageExtensions.Type.Extension>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GHC.LanguageExtensions.Type.Extension>_R)
                      @ GHC.LanguageExtensions.Type.Extension
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GHC.LanguageExtensions.Type.Extension))) -}
451928d4ab80bbfae83e006f2bf1e619
  $sinsertWith_$sgo4 ::
    (GHC.LanguageExtensions.Type.Extension -> a1 -> a1 -> a1)
    -> GHC.LanguageExtensions.Type.Extension
    -> a1
    -> Data.Map.Base.Map GHC.LanguageExtensions.Type.Extension a1
    -> Data.Map.Base.Map GHC.LanguageExtensions.Type.Extension a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><S,1*U><L,U><S,1*U> -}
afdea8068f6b30a88d35d77cac7c8f83
  $sread :: GHC.Base.String -> GHC.LanguageExtensions.Type.Extension
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither
                        @ GHC.LanguageExtensions.Type.Extension
                        AnnotationParser.$fReadExtension
                        s of wild {
                   Data.Either.Left x
                   -> GHC.Err.errorWithoutStackTrace
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.LanguageExtensions.Type.Extension
                        x
                   Data.Either.Right y -> y }) -}
340b57b10338294d6dabf1aa7dc729a2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   AnnotationParser.$trModule2
                   AnnotationParser.$trModule1) -}
1cce4733aba6d0eefbdbdb934524be89
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AnnotationParser"#) -}
b3a675881e96fd01ba5d916c3b302026
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "ht-extension-organizer-0.1.0.0-1NgBbe619AH4JExLErEUCI"#) -}
afcafc4853967fe45150a0c420229e1d
  $wbreak' :: (a -> GHC.Types.Bool) -> [a] -> (# [a], [a] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Inline: [0] -}
9b6007969131bbabfba43e552f0a1439
  break' :: (a -> GHC.Types.Bool) -> [a] -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: a -> GHC.Types.Bool) (w1 :: [a]) ->
                 case AnnotationParser.$wbreak' @ a w w1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
519c59f8d52b3555cd5461821b669589
  delimit :: (a -> GHC.Types.Bool) -> [a] -> [[a]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (pred :: a -> GHC.Types.Bool) (xs :: [a]) ->
                 AnnotationParser.delimit' @ a pred xs (GHC.Types.[] @ [a])) -}
060079c459c6849e3fd50dab6758943e
  delimit' :: (a -> GHC.Types.Bool) -> [a] -> [[a]] -> [[a]]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><S,1*U><S,1*U> -}
ec4434fd638b11873376db0006e98ccd
  getAnnot :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 AnnotationParser.getAnnot_go (AnnotationParser.getAnnot1 x)) -}
395580b88096d7967fc19ec831cae40b
  getAnnot1 :: GHC.Base.String -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 case GHC.List.dropWhile
                        @ [GHC.Types.Char]
                        AnnotationParser.getAnnot4
                        (Data.OldList.words x) of wild {
                   [] -> GHC.Types.[] @ [GHC.Types.Char]
                   : ipv ipv1
                   -> GHC.List.takeWhile
                        @ [GHC.Types.Char]
                        AnnotationParser.getAnnot2
                        ipv1 }) -}
976f746fe7bb9b0f768ccf8cab11eff9
  getAnnot2 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Types.Char]) ->
                 case Data.OldList.isPrefixOf
                        @ GHC.Types.Char
                        GHC.Classes.$fEqChar
                        AnnotationParser.getAnnot3
                        x of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
133a07b24787daebb2a4ce79db9cf68f
  getAnnot3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*-}"#) -}
51969724c22c3844adaf58184d2ed7e5
  getAnnot4 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [GHC.Types.Char]) ->
                 case Data.OldList.isPrefixOf
                        @ GHC.Types.Char
                        GHC.Classes.$fEqChar
                        AnnotationParser.getAnnot5
                        x of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
a12999985037de35d5e6a2e16a5f9dd6
  getAnnot5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "{-*"#) -}
2580fb7453ca027babfc65a44730a12f
  getAnnot_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3e2d511eaf23a90fa3482a59be83b748
  getExtensionAnnotations ::
    GHC.Base.String
    -> Data.Map.Base.Map
         GHC.LanguageExtensions.Type.Extension [GHC.Types.Int]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 AnnotationParser.getExtensionAnnotations_go
                   AnnotationParser.getExtensionAnnotations1
                   (Data.OldList.lines s)
                   (Data.Map.Base.Tip
                      @ GHC.LanguageExtensions.Type.Extension
                      @ [GHC.Types.Int])) -}
be972a309ca82eba7d1ca62422c2869f
  getExtensionAnnotations1 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1# 9223372036854775807#) -}
cf4a292f91f36c7eb9af4cbeaf7da390
  getExtensionAnnotations_go ::
    [GHC.Types.Int]
    -> [[GHC.Types.Char]]
    -> Data.Map.Base.Map
         GHC.LanguageExtensions.Type.Extension [GHC.Types.Int]
    -> Data.Map.Base.Map
         GHC.LanguageExtensions.Type.Extension [GHC.Types.Int]
  {- Arity: 3, Strictness: <S,1*U><L,1*U><S,1*U> -}
b4abbd709b2f9f384f8cc4b0eb4e8735
  parseAnnot ::
    GHC.Base.String -> [GHC.LanguageExtensions.Type.Extension]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 GHC.Base.map
                   @ [GHC.Types.Char]
                   @ GHC.LanguageExtensions.Type.Extension
                   AnnotationParser.$sread
                   (AnnotationParser.delimit'
                      @ GHC.Types.Char
                      AnnotationParser.parseAnnot1
                      (AnnotationParser.parseAnnot_go (AnnotationParser.getAnnot1 x))
                      (GHC.Types.[] @ [GHC.Types.Char]))) -}
abd8e0247dffda109925c280541caf3e
  parseAnnot1 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Types.Char) ->
                 case ds of wild { GHC.Types.C# x ->
                 case x of wild1 {
                   DEFAULT -> GHC.Types.False ','# -> GHC.Types.True } }) -}
23e65f4d301c8c19b96db834b357e1e6
  parseAnnot_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
a54a910ec47fcf6e95f6bbaf35d53618
  parseFile ::
    GHC.Base.String
    -> [(GHC.Types.Int, [GHC.LanguageExtensions.Type.Extension])]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 AnnotationParser.parseFile_go
                   AnnotationParser.getExtensionAnnotations1
                   (Data.OldList.lines x)) -}
11f975f9316b20d79810fac0ae596b11
  parseFile_go ::
    [GHC.Types.Int]
    -> [[GHC.Types.Char]]
    -> [(GHC.Types.Int, [GHC.LanguageExtensions.Type.Extension])]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
3c887fa95fdbef61802c74827cf6e2c1
  parseLine ::
    (GHC.Types.Int, GHC.Base.String)
    -> (GHC.Types.Int, [GHC.LanguageExtensions.Type.Extension])
  {- Arity: 1, Strictness: <S,1*U(U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (GHC.Types.Int, GHC.Base.String)) ->
                 case ds of wild { (,) num line ->
                 (num, AnnotationParser.parseAnnot line) }) -}
instance GHC.Read.Read [GHC.LanguageExtensions.Type.Extension]
  = AnnotationParser.$fReadExtension
"SPEC/AnnotationParser read @ Extension" [ALWAYS] forall ($dRead :: GHC.Read.Read
                                                                      GHC.LanguageExtensions.Type.Extension)
  Text.Read.read @ GHC.LanguageExtensions.Type.Extension $dRead
  = AnnotationParser.$sread
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

