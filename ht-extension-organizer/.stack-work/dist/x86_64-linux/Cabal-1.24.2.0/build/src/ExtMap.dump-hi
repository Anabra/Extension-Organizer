
==================== FINAL INTERFACE ====================
2017-09-05 20:49:22.671776 UTC

interface ht-extension-organizer-0.1.0.0-y3uypH7gCtA60AaWeuyZL:ExtMap 8002
  interface hash: 54777662cea2feec69a4cb7f6ec258fb
  ABI hash: ce208fa2f233772cc4b03c60efef446e
  export-list hash: 386834db6d638da70834f5e21bd3eb3b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f2dd9257bab8f9ef44ccf13f892fede2
  sig of: Nothing
  used TH splices: False
  where
exports:
  ExtMap.ExtMap
  ExtMap.LogicalRelation{ExtMap.:&&: ExtMap.:||: ExtMap.LVar ExtMap.Not}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1 ghc-8.0.2
                      ghc-boot-8.0.2@ghc-boot-8.0.2 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1 time-1.6.0.1@time-1.6.0.1
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  ghc-8.0.2:SrcLoc ae8e460a2b77026f9c6a4d6cdcc5d57e
import  -/  ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type 92441ea50916fa3940e20fae60f255d7
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
fixities infix 7 :&&:, infix 6 :||:
244102f8a6d7434a090b758121b05523
  $fEqLogicalRelation ::
    GHC.Classes.Eq a => GHC.Classes.Eq (ExtMap.LogicalRelation a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dEq :: GHC.Classes.Eq a).
                  @ (ExtMap.LogicalRelation a)
                  (ExtMap.$fEqLogicalRelation_$c== @ a $dEq)
                  (ExtMap.$fEqLogicalRelation_$c/= @ a $dEq) -}
244102f8a6d7434a090b758121b05523
  $fEqLogicalRelation_$c/= ::
    GHC.Classes.Eq a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (a1 :: ExtMap.LogicalRelation a)
                   (b :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fEqLogicalRelation_$c== @ a $dEq a1 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
244102f8a6d7434a090b758121b05523
  $fEqLogicalRelation_$c== ::
    GHC.Classes.Eq a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U> -}
244102f8a6d7434a090b758121b05523
  $fFunctorLogicalRelation :: GHC.Base.Functor ExtMap.LogicalRelation
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ExtMap.LogicalRelation
                  ExtMap.$fFunctorLogicalRelation_$cfmap
                  ExtMap.$fFunctorLogicalRelation_$c<$ -}
244102f8a6d7434a090b758121b05523
  $fFunctorLogicalRelation_$c<$ ::
    a -> ExtMap.LogicalRelation b -> ExtMap.LogicalRelation a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b (eta :: a) (eta1 :: ExtMap.LogicalRelation b) ->
                 ExtMap.$fFunctorLogicalRelation_$cfmap
                   @ b
                   @ a
                   (\ (ds :: b) -> eta)
                   eta1) -}
244102f8a6d7434a090b758121b05523
  $fFunctorLogicalRelation_$cfmap ::
    (a -> b) -> ExtMap.LogicalRelation a -> ExtMap.LogicalRelation b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation ::
    GHC.Classes.Ord a => GHC.Classes.Ord (ExtMap.LogicalRelation a)
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dOrd :: GHC.Classes.Ord a).
                  @ (ExtMap.LogicalRelation a)
                  (ExtMap.$fOrdLogicalRelation_$cp1Ord @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$c< @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$c<= @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$c> @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$c>= @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$cmax @ a $dOrd)
                  (ExtMap.$fOrdLogicalRelation_$cmin @ a $dOrd) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$c< ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: ExtMap.LogicalRelation a)
                   (y :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$c<= ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: ExtMap.LogicalRelation a)
                   (y :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$c> ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: ExtMap.LogicalRelation a)
                   (y :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$c>= ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: ExtMap.LogicalRelation a)
                   (y :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$ccompare ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> GHC.Types.Ordering
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U> -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$cmax ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> ExtMap.LogicalRelation a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: ExtMap.LogicalRelation a)
                   (y :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$cmin ::
    GHC.Classes.Ord a =>
    ExtMap.LogicalRelation a
    -> ExtMap.LogicalRelation a -> ExtMap.LogicalRelation a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: ExtMap.LogicalRelation a)
                   (y :: ExtMap.LogicalRelation a) ->
                 case ExtMap.$fOrdLogicalRelation_$ccompare @ a $dOrd x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
244102f8a6d7434a090b758121b05523
  $fOrdLogicalRelation_$cp1Ord ::
    GHC.Classes.Ord a => GHC.Classes.Eq (ExtMap.LogicalRelation a)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 ExtMap.$fEqLogicalRelation @ a (GHC.Classes.$p1Ord @ a $dOrd)) -}
244102f8a6d7434a090b758121b05523
  $fShowLogicalRelation ::
    GHC.Show.Show a => GHC.Show.Show (ExtMap.LogicalRelation a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dShow :: GHC.Show.Show a).
                  @ (ExtMap.LogicalRelation a)
                  (ExtMap.$fShowLogicalRelation_$cshowsPrec @ a $dShow)
                  (ExtMap.$fShowLogicalRelation_$cshow @ a $dShow)
                  (ExtMap.$fShowLogicalRelation_$cshowList @ a $dShow) -}
eacbe1ff2d3598774859fc789e5bde91
  $fShowLogicalRelation1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
244102f8a6d7434a090b758121b05523
  $fShowLogicalRelation_$cshow ::
    GHC.Show.Show a => ExtMap.LogicalRelation a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(U)),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x :: ExtMap.LogicalRelation a) ->
                 ExtMap.$fShowLogicalRelation_$cshowsPrec
                   @ a
                   $dShow
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
244102f8a6d7434a090b758121b05523
  $fShowLogicalRelation_$cshowList ::
    GHC.Show.Show a => [ExtMap.LogicalRelation a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (eta :: [ExtMap.LogicalRelation a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (ExtMap.LogicalRelation a)
                   (ExtMap.$fShowLogicalRelation_$cshowsPrec
                      @ a
                      $dShow
                      ExtMap.$fShowLogicalRelation1)
                   eta
                   eta1) -}
244102f8a6d7434a090b758121b05523
  $fShowLogicalRelation_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> ExtMap.LogicalRelation a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><S(S),1*U(U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: ExtMap.LogicalRelation a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 ExtMap.$w$cshowsPrec @ a w ww1 w2 }) -}
e98ddeb3b55a1240c8c0935412181ed3
  $tc':&&: :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9899762914481473636##
                   17490060342188189394##
                   ExtMap.$trModule
                   ExtMap.$tc':&&:1) -}
9642cde9a4e11f86c6ac1ed5d39f93d5
  $tc':&&:1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "':&&:"#) -}
9c1c8d4d8dc1b07fe0c2f1a579828ae3
  $tc':||: :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15071205839840120877##
                   15418174867377743130##
                   ExtMap.$trModule
                   ExtMap.$tc':||:1) -}
ef111a6a61a91ae16e5c5575ef6354a9
  $tc':||:1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "':||:"#) -}
21a75adc803979ab5d65dd2475310591
  $tc'LVar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7891642570931828696##
                   10010534767444112715##
                   ExtMap.$trModule
                   ExtMap.$tc'LVar1) -}
b4ffc4d036899fd0ad9f7b851afcd169
  $tc'LVar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LVar"#) -}
0a3580e0eb72ce496f03b2adb109e737
  $tc'Not :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11155949431005552406##
                   14572488530086627352##
                   ExtMap.$trModule
                   ExtMap.$tc'Not1) -}
32a6e09cc2c0b6a85300290a2b4af3e8
  $tc'Not1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Not"#) -}
03cde318aa32c3a415b8baaed224943f
  $tcLogicalRelation :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15230669720535164281##
                   2573134250711462190##
                   ExtMap.$trModule
                   ExtMap.$tcLogicalRelation1) -}
077229f7bca74a35f36e1600723711eb
  $tcLogicalRelation1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LogicalRelation"#) -}
427ec8f3a4d153de69a59c8d149aef94
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ExtMap.$trModule2
                   ExtMap.$trModule1) -}
739225503762302398aeec451b28e52c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ExtMap"#) -}
1fb70c477fc1ccc6a32781852ac2d4c9
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "ht-extension-organizer-0.1.0.0-y3uypH7gCtA60AaWeuyZL"#) -}
244102f8a6d7434a090b758121b05523
  $w$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> ExtMap.LogicalRelation a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><S,U><S,1*U>,
     Inline: [0] -}
86d8b8e09d7cd6f6e3831751b6397a46
  type ExtMap =
    Data.Map.Base.Map
      (ExtMap.LogicalRelation GHC.LanguageExtensions.Type.Extension)
      [SrcLoc.SrcSpan]
244102f8a6d7434a090b758121b05523
  data LogicalRelation a
    = LVar a
    | Not (ExtMap.LogicalRelation a)
    | (ExtMap.LogicalRelation a) :&&: (ExtMap.LogicalRelation a)
    | (ExtMap.LogicalRelation a) :||: (ExtMap.LogicalRelation a)
instance GHC.Classes.Eq [ExtMap.LogicalRelation]
  = ExtMap.$fEqLogicalRelation
instance GHC.Base.Functor [ExtMap.LogicalRelation]
  = ExtMap.$fFunctorLogicalRelation
instance GHC.Classes.Ord [ExtMap.LogicalRelation]
  = ExtMap.$fOrdLogicalRelation
instance GHC.Show.Show [ExtMap.LogicalRelation]
  = ExtMap.$fShowLogicalRelation
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

